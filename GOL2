<!-- filename: game_of_life.html -->
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Game of Life</title>
<style>
  body {
    margin: 0;
    overflow: hidden;
  }
  .grid {
    position: absolute;
    top: 10px;
    left: 10px;
    display: grid;
    grid-template-columns: repeat(100, 5px);
    grid-gap: 0;
  }
  .cell {
    width: 5px;
    height: 5px;
    background-color: #fff;
  }
  .alive {
    background-color: #000;
  }
</style>
</head>
<body>
<div id="grid" class="grid"></div>
<script>
  const gridElement = document.getElementById('grid');
  const gridSize = 100;
  const cellSize = 5;
  const updateFrequency = 100; // Update every 10 times per second (1000ms / 10)
  let grid = [];

  function initializeGrid() {
    for (let i = 0; i < gridSize; i++) {
      grid[i] = [];
      for (let j = 0; j < gridSize; j++) {
        grid[i][j] = Math.random() < 0.3; // 30% probability of being alive
        const cell = document.createElement('div');
        cell.classList.add('cell');
        gridElement.appendChild(cell);
      }
    }
  }

  function countNeighbors(x, y) {
    let count = 0;
    for (let dx = -1; dx <= 1; dx++) {
      for (let dy = -1; dy <= 1; dy++) {
        if (dx === 0 && dy === 0) continue;
        const nx = (x + dx + gridSize) % gridSize;
        const ny = (y + dy + gridSize) % gridSize;
        if (grid[nx][ny]) count++;
      }
    }
    return count;
  }

  function applyRules() {
    const newGrid = [];
    for (let i = 0; i < gridSize; i++) {
      newGrid[i] = [];
      for (let j = 0; j < gridSize; j++) {
        const neighbors = countNeighbors(i, j);
        const alive = grid[i][j];
        newGrid[i][j] = (alive && neighbors === 2) || neighbors === 3;
      }
    }
    grid = newGrid;
  }

  function applyRandomChange(frameCount) {
    if (frameCount % 5 === 0) {
      const x = Math.floor(Math.random() * gridSize);
      const y = Math.floor(Math.random() * gridSize);
      if (Math.random() < 0.5) {
        grid[x][y] = true; // Set cell on
      } else {
        grid[x][y] = false; // Set cell off
      }
    }
  }

  function renderGrid() {
    gridElement.childNodes.forEach((cell, index) => {
      const x = Math.floor(index / gridSize);
      const y = index % gridSize;
      cell.classList.toggle('alive', grid[x][y]);
    });
  }

  function update() {
    let frameCount = 0;
    setInterval(() => {
      applyRules();
      applyRandomChange(frameCount);
      renderGrid();
      frameCount++;
    }, updateFrequency);
  }

  initializeGrid();
  update();
</script>
</body>
</html>